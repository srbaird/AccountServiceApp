<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:jee="http://www.springframework.org/schema/jee"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee-3.0.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.1.xsd">
    <!--        
        ***************************************************************************************************
        JNDI Naming Lookup: requires Glassfish jars as a runtime resource 
        ***************************************************************************************************
    --> 
    <jee:jndi-lookup id="dataSource" jndi-name="jdbc/applicationAccount">
        <jee:environment>
            java.naming.factory.initial=com.sun.enterprise.naming.SerialInitContextFactory
        </jee:environment>
    </jee:jndi-lookup>
    <!--        
        ***************************************************************************************************
        Hibernate Session Factory
        ***************************************************************************************************
    --> 
    <bean id="sessionFactory" class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
        <property name="dataSource" ref="dataSource"/>
        <property name="configLocation" value="accountServiceHibernate.cfg.xml"/>
    </bean>
    <!--        
        ***************************************************************************************************
        Remote EJB instance
        ***************************************************************************************************
            <jee:remote-slsb id="accountServiceApp" jndi-name="ejb/accountServiceApp"  business-interface="com.bac.accountservice.AccountService"/>
    --> 
    <bean id="accountServiceApp" class="com.bac.accountserviceapp.AccountServiceApp" init-method="init">
        <property name="strategy" ref="strategy"/>
        <property name="authenticationManager" ref="authenticationManager"/>
    </bean>
    <!--        
        ***************************************************************************************************
        Application Accessor instance
        ***************************************************************************************************
    --> 
    <bean id="accountAccessor" class="com.bac.accountserviceapp.data.mysql.MysqlAccountAccessor">
        <property name="sessionFactory" ref="sessionFactory"/>
    </bean>
    <!--        
        ***************************************************************************************************
        Authentication Manager instance
        ***************************************************************************************************
    --> 
    <bean id="authenticationManager" class="org.springframework.security.authentication.ProviderManager">
        <property name="providers">
            <list>
                <ref local="daoAuthenticationProvider"/>
            </list>
        </property>
    </bean>
    <!--        
        ***************************************************************************************************
        Default DAO authentication
        ***************************************************************************************************
    --> 
    <bean id="daoAuthenticationProvider" class="org.springframework.security.authentication.dao.DaoAuthenticationProvider">
        <property name="userDetailsService" ref="mysqlUserDetailsService"/>
        <property name="passwordEncoder" ref="bcryptEncoder"/>
        <property name="hideUserNotFoundExceptions" value="false"/>
    </bean>
    <!--        
        ***************************************************************************************************
        User Details composer
        ***************************************************************************************************
    --> 
    <bean id="mysqlUserDetailsService" class="com.bac.accountserviceapp.data.mysql.MysqlUserDetailsService">
        <property name="access" ref="accountAccessor"/>
    </bean>
    <!--        
        ***************************************************************************************************
        Supplied Spring Password Encoder
        ***************************************************************************************************
    --> 
    <bean id="bcryptEncoder" class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder"/>
    <!--        
        ***************************************************************************************************
        Application Service Strategy provider
        ***************************************************************************************************
    --> 
    <bean id="strategy" class="com.bac.accountserviceapp.data.mysql.MysqlAccountServiceStrategy">
        <property name="accountAccessor" ref="accountAccessor"/>
    </bean>
    
</beans>